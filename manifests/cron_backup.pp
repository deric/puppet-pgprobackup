# @api private
# A cron job is exported from a database instance, but could be executed elsewhere.
# Typically on a catalog (backup) server.
define pgprobackup::cron_backup(
  String                          $id,
  String                          $cluster,
  String                          $host_group,
  Pgprobackup::Backup_type        $backup_type,
  String                          $server_address,
  String                          $db_name,
  String                          $db_user,
  String                          $version,
  String                          $backup_user,
  String                          $remote_user,
  Integer                         $remote_port,
  Stdlib::AbsolutePath            $backup_dir,
  Optional[Stdlib::AbsolutePath]  $log_dir,
  Optional[Pgprobackup::LogLevel] $log_level_file,
  Optional[Pgprobackup::LogLevel] $log_level_console,
  Optional[String]                $log_file,
  Optional[Integer]               $retention_redundancy,
  Optional[Integer]               $retention_window,
  Boolean                         $delete_expired,
  Boolean                         $merge_expired,
  Optional[Integer]               $threads,
  Boolean                         $temp_slot,
  Optional[String]                $slot,
  Boolean                         $validate,
  Optional[String]                $compress_algorithm,
  Integer                         $compress_level,
  Optional[Integer]               $archive_timeout,
  Boolean                         $archive_wal,
  Optional[Pgprobackup::Hour]     $hour = 4,
  Optional[Pgprobackup::Minute]   $minute = 0,
  Optional[Pgprobackup::Month]    $month = '*',
  Optional[Pgprobackup::Weekday]  $weekday = '*',
  Optional[Pgprobackup::Monthday] $monthday = undef,
  Optional[String]                $binary,
  ){

    @@cron { "pgprobackup_${backup_type}_${server_address}-${host_group}":
      command  => epp('pgprobackup/cron_backup.epp', {
            id                   => $id,
            cluster              => $cluster,
            db_name              => $db_name,
            db_user              => $db_user,
            version              => $version,
            host_group           => $host_group,
            backup_dir           => $backup_dir,
            backup_type          => $backup_type,
            backup_user          => $backup_user,
            server_address       => $server_address,
            delete_expired       => $delete_expired,
            retention_redundancy => $retention_redundancy,
            retention_window     => $retention_window,
            merge_expired        => $merge_expired,
            threads              => $threads,
            temp_slot            => $temp_slot,
            slot                 => $slot,
            validate             => $validate,
            compress_algorithm   => $compress_algorithm,
            compress_level       => $compress_level,
            archive_timeout      => $archive_timeout,
            archive_wal          => $archive_wal,
            log_dir              => $log_dir,
            log_file             => $log_file,
            log_level_file       => $log_level_file,
            log_level_console    => $log_level_console,
            remote_user          => $remote_user,
            remote_port          => $remote_port,
            binary               => $binary,
          }),
      user     => $backup_user,
      weekday  => $weekday,
      hour     => $hour,
      minute   => $minute,
      month    => $month,
      monthday => $monthday,
      tag      => "pgprobackup-${host_group}",
    }

}